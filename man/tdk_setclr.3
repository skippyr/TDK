.TH tdk_setclr 3 ${VERSION} ${PKG}

.SH NAME

.PP
tdk_setclr - it sets the terminal foreground/background colors

.SH LIBRARY

.PP
tdk (\fIlibtdk\fR, \fI-ltdk\fR)

.SH SYNOPSIS

.nf
\fB#include\fR <tdk.h>

\fBvoid\fR tdk_setclr(\fBint\fR \fIclr\fR, \fBint\fR \fIlyr\fR);
.fi

.SH DESCRIPTION

.PP
It sets the color \fIclr\fR in the layer \fIlyr\fR.

.SH COLORS

The \fIclr\fR parameter may be:

.TP
.B tdk_ClrBlk
The black color.

.TP
.B tdk_ClrRed
The red color.

.TP
.B tdk_ClrGrn
The green color.

.TP
.B tdk_ClrYlw
The yellow color.

.TP
.B tdk_ClrBle
The blue color.

.TP
.B tdk_ClrMag
The magenta color.

.TP
.B tdk_ClrCyn
The cyan color.

.TP
.B tdk_ClrWht
The white color.

.TP
.B tdk_ClrDft
The default color.

.SH LAYERS

The \fIlyr\fR parameter may be:

.TP
.B tdk_LyrFg
The foreground layer.

.TP
.B tdk_LyrBg
The background layer.

.SH EXAMPLES

.nf
\fB#include\fR <tdk.h>

\fBint\fR main(\fBvoid\fR) {
  \fBchar\fR msg[] = "Here Are Dragons!";
  tdk_setclr(tdk_ClrRed, tdk_LyrFg);
  printf("%s\\n", msg);
  tdk_setclr(tdk_ClrYlw, tdk_LyrFg);
  printf("%s\\n", msg);
  tdk_setclr(tdk_ClrGrn, tdk_LyrFg);
  printf("%s\\n", msg);
  tdk_setclr(tdk_ClrDft, tdk_LyrFg);
  printf("%s\\n", msg);
  \fBreturn\fR 0;
}
.fi

.SH NOTES

.PP
Terminals usually have issues rending the new line character (\\n) with a
background color. It is always a good idea to reset it back to default before
outputting it.

.SH SEE ALSO

.BR tdk (3)

.TH tdk 3 ${VERSION}

.SH NAME

.PP
tdk - terminal development kit

.SH LIBRARY

.PP
tdk (\fIlibtdk\fR, \fI-ltdk\fR)

.SH SYNOPSIS

.nf
\fB#include\fR <tdk.h>

\fBvoid\fR tdk_beep(\fBvoid\fR);
\fBvoid\fR tdk_clearin(\fBvoid\fR);
\fBvoid\fR tdk_clearln(\fBvoid\fR);
\fBint\fR tdk_getcpos(\fBunsigned short int\fR *\fIcol\fR, \fBunsigned short int\fR *\fIrow\fR);
\fBint\fR tdk_getwdim(\fBunsigned short int\fR *\fIcol\fR, \fBunsigned short int\fR *\fIrow\fR);
\fBint\fR tdk_readkey(\fBint\fR *\fIkey\fR, \fBchar\fR *\fImod\fR);
\fBvoid\fR tdk_set256clr(\fBint\fR \fIclr\fR, \fBint\fR \fIlyr\fR);
\fBvoid\fR tdk_setcpos(\fBunsigned short int\fR \fIcol\fR, \fBunsigned short int\fR \fIrow\fR);
\fBvoid\fR tdk_setcshp(\fBint\fR \fIshp\fR);
\fBvoid\fR tdk_setcvis(\fBint\fR \fIisvis\fR);
\fBvoid\fR tdk_seteff(\fBint\fR \fIeff\fR, \fBint\fR \fIisenb\fR);
\fBvoid\fR tdk_sethexclr(\fBint\fR \fIhex\fR, \fBint\fR \fIlyr\fR);
\fBvoid\fR tdk_setlum(\fBint\fR \fIlum\fR);
\fBvoid\fR tdk_setrgbclr(\fBint\fR \fIr\fR, \fBint\fR \fIg\fR, \fBint\fR \fIb\fR, \fBint\fR \fIlyr\fR);
\fBvoid\fR tdk_setwalt(\fBint\fR \fIisenb\fR);
.fi

.SH STANDARDS

.PP
C99, POSIX.1-2008

.SH DESCRIPTION

.PP
A simple C99 terminal manipulation library for GNU/Linux that is capable of handling some terminal properties, styles and key readings with UTF-8 encoding.

.PP
Designed to be an alternative to curses-like libraries, it offers a solid base for creating general purpose terminal based softwares, while leaving room to full-feature libraries to be built upon for more specific use cases.

.PP
In order to be kept small and frugal, it has some singular limitations that you need to be aware of:

.IP \\[bu]
It does not include formal resets: setting up custom terminal properties or locale character classification (LC_CTYPE in setlocale() (3)) manually may make it malfunction.

.IP \\[bu]
For successful readings and output of ANSI escape sequences using UTF-8 encoding: the standard input stream must be kept oriented to wide characters, while the standard output and error streams, to single byte characters.

.PP
Now that you know this, you are ready to start reading the manual pages of its functions to learn about what they do and how to use them.

.PP
If you are itching with curiosity, you are always free to that good look into its source code to see what it does under the hood.

.SH RESERVED NAMES

.PP
This library reserves names starting with tdk_ and TDK_ possibly prefixed by an underscore to reserve them for library implementation.

.SH SOURCE CODE

.PP
Its source code is available at: <\fIhttps://github.com/skippyr/libtdk\fR>.

.SH HELP

.PP
If you need help related to this project, open a new issue in its issues pages (<\fIhttps://github.com/skippyr/libtdk/issues\fR>) or send me an e-mail (<\fImailto:skippyr.developer@gmail.com\fR>) describing what is going on.

.SH CONTRIBUTING

.PP
This project is open to review and possibly accept contributions, specially fixes and suggestions. If you are interested, send your contribution to its pull requests page (<\fIhttps://github.com/skippyr/libtdk/pulls\fR>) or to my e-mail (<\fImailto:skippyr.developer@gmail.com\fR>).

By contributing to this project, you agree to license your work under the same license that the project uses.

.SH LICENSE

.PP
This project is licensed under the BSD-3-Clause License. Refer to the LICENSE file that comes in its source code for license and copyright details.

.nf
\fB≥v≥v Here Are Dragons! ≥v≥v\fR
Made with love by skippyr <3
.fi

.SH SEE ALSO

.BR setlocale (3)

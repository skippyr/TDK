.TH tdk_setCursorShape 3 ${VERSION}

.SH NAME

.PP
tdk_setCursorShape - sets the terminal cursor shape

.SH LIBRARY

.PP
tdk (\fIlibtdk\fR, \fI-tdk\fR)

.SH SYNOPSIS

.nf
\fB#include <tdk.h>

void tdk_setCursorShape(int \fIshape\fB);\fR
.fi

.SH DESCRIPTION

.PP
Sets the terminal cursor \fIshape\fR.

.SH SHAPES

.PP
These are custom shape values defined by the library that may be used as the \fIshape\fR parameter:

.TP
.B tdk_Shape_Default
The default shape. Used for resets.

.TP
.B tdk_Shape_Block, tdk_Shape_BlinkingBlock
The regular and blinking variants of the block shape.

.TP
.B tdk_Shape_Underline, tdk_Shape_BlinkingUnderline
The regular and blinking variants of the underline shape.

.TP
.B tdk_Shape_Bar, tdk_Shape_BlinkingBar
The regular and blinking variants of the bar shape.

.SH EXAMPLES

.nf
#include <tdk.h>

int main(void) {
  tdk_setCursorShape(tdk_Shape_Underline);
  tdk_readKeyEvent(NULL, NULL);
  tdk_setCursorShape(tdk_Shape_Block);
  tdk_readKeyEvent(NULL, NULL);
  tdk_setCursorShape(tdk_Shape_Bar);
  tdk_readKeyEvent(NULL, NULL);
  tdk_setCursorShape(tdk_Shape_Default);
  tdk_readKeyEvent(NULL, NULL);
  return 0;
}
.fi

.SH NOTES

.TP
.IP \\[bu]
A custom shape must be reset before the end of your program to avoid conflicts with the current shell session.

.TP
.IP \\[bu]
This function caches ANSI escape sequences in the standard output buffer if the standard output stream is a TTY.

Before writting to the standard error stream, ensure to flush the standard output buffer by using \fBfflush\fR(3) for them to be used.

.TP
.IP \\[bu]
No shape is set if the standard output and error streams are being redirected/piped or are wide character oriented.

.SH SEE ALSO

.BR fflush (3),
.BR tdk (3),
.BR tdk_readKeyEvent (3)

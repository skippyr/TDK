.TH tdk_readKey 3 "${LIBRARY_VERSION}" "${LIBRARY_PACKAGE}"

.SH NAME

.PP
tdk_readKey - it reads a special key or UTF-8 character.

.SH LIBRARY

.PP
tdk (\fIlibtdk\fR, \fI-ltdk\fR)

.SH SYNOPSIS

.PP
\fBint\fR tdk_readKey(\fBvoid\fR);

.SH DESCRIPTION

.PP
It blocks the terminal process until, at least, one character gets inserted in
the stdin buffer and then returns a value that indicates a possible failed
status, a special key or UTF-8 character read.

.PP
As it reads characters from the stdin stream, its buffer will always be cleared
after a successful call.

.SH RETURN VALUES

.IP \[bu]
It returns WEOF if the reading fails. That happens if the stdin stream is being
redirected or it is not oriented to wide characters, and if the stdout and
stderr streams are being redirected.

.IP \[bu]
It returns 0 if the reading succeded but nothing could not be identified.

.IP \[bu]
Otherwise, it returns a number representing a special key or UTF-8 character.

.SH SPECIAL KEYS
These values can be used to identify special keys:

.TP
.B
tdk_Key_UpArrow, tdk_Key_DownArrow, tdk_Key_RightArrow, tdk_Key_LeftArrow
The arrow keys.

.TP
.B
tdk_Key_F1, tdk_Key_F2, tdk_Key_F3, tdk_Key_F4, tdk_Key_F5, tdk_Key_F6,        \
tdk_Key_F7, tdk_Key_F8, tdk_Key_F9, tdk_Key_F10, tdk_Key_F11, tdk_Key_F12
The function keys.

.TP
.B
tdk_Key_Insert, tdk_Key_Delete, tdk_Key_Space, tdk_KeyBackspace, tdk_Key_Enter,\
tdk_Key_Tab
The insertion/deletion keys.

.TP
.B
tdk_Key_Home, tdk_Key_End, tdk_Key_PageUp, tdk_Key_PageDown, tdk_Key_Escape
The navigation keys.

.SH EXAMPLES

.nf
\fB#include\fR <tdk.h>

\fBint\fR main(\fBvoid\fR) {
  /* It reads a key press. */
  \fBint\fR key = tdk_readKey();
  /* It checks if the key is in the latin-script alphabet. */
  if ((key >= 'a' && key <= 'z') || (key >= 'A' && key <= 'Z')) {
      printf("Latin-Script Alphabet.\\n");
  }
  /* It checks if the key is a number. */
  if (key >= '0' && key <= '9') {
    printf("Number.\\n");
  }
  /* It checks if the key is a function key. */
  if (key >= tdk_Key_F1 && key <= tdk_Key_F12) {
      printf("Function Key.\\n");
  }
  /* It checks if the key correspond to movement keybindings. */
  if (key == tdk_Key_ArrowUp || key == 'k') {
    printf("Moving Up.\\n");
  } else if (key == tdk_Key_ArrowDown || key == 'j') {
      printf("Moving Down.\\n");
  } else if (key == tdk_Key_ArrowRight || key == 'l') {
    printf("Moving Right.\\n");
  } else if (key == tdk_Key_ArrowLeft || key == 'h') {
    printf("Moving Left.\\n");
  } else if (key == tdk_Key_Home || key == 'K') {
    printf("Moving All The Way Up.\\n");
  } else if (key == tdk_Key_End || key == 'J') {
    printf("Moving All The Way Down.\\n");
  }
  /* It checks if the key correspond to foreign language characters. */
  if (key == L'α' || key == L'あ' || key == L'ç') {
    printf("Foreign Language Keys\\n");
  }
  /* It checks if the key correspond to an emoji. */
  if (key == L'🔥' || key == L'🐉') {
    printf("Emojis\\n");
  }
  return 0;
}
.fi

.SH NOTES

.PP
Terminals may reserve certain keys for their own features, which may not allow
you from reading them. That usually happens to function keys.

.SH SEE ALSO

.BR tdk (3)

.TH tdk_getcpos 3 ${VERSION}

.SH NAME

.PP
tdk_getcpos - it gets the terminal cursor position

.SH LIBRARY

.PP
tdk (\fIlibtdk\fR, \fI-ltdk\fR)

.SH SYNOPSIS

.nf
\fB#include\fR <tdk.h>

\fBint\fR tdk_getcpos(\fBunsigned short int\fR *\fIcol\fR, \fBunsigned short int\fR *\fIrow\fR);
.fi

.SH DESCRIPTION

.PP
It gets the terminal cursor column and row positions and puts those values inside of the addresses pointed by \fIcol\fR and \fIrow\fR, respectively.

.PP
Both parameters are optional: if one is not required, its address may be set to NULL.

.PP
It considers an origin position at the top left corner of the screen, where (col = 0, row = 0). The column and row positions increase going right and down, respectively.

.PP
As it reads the answer given by the terminal through the input buffer, you need to ensure it is clean before using that. If you need to clear it up, you can use tdk_clearin() (3).

.SH RETURN VALUES

.PP
On success, it returns 0, and -1 otherwise. It fails if the standard input stream or the standard output and error streams are being redirected.

.SH EXAMPLES

.nf
\fB#include\fR <stdio.h>
\fB#include\fR <tdk.h>

\fBstatic unsigned short int\fR ccol_g;
\fBstatic unsigned short int\fR crow_g;

\fBint\fR main(\fBvoid\fR)
{
	tdk_getcpos(&ccol_g, &crow_g);
	printf(":: Cursor Column: %hu.\fB\\n\fR", ccol_g);
	printf(":: Cursor Row   : %hu.\fB\\n\fR", crow_g);
	\fBreturn\fR (0);
}
.fi

.SH SEE ALSO

.BR tdk (3),
.BR tdk_clearin (3)
